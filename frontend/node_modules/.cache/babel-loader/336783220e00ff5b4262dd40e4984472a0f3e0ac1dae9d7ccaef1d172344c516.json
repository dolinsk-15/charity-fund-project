{"ast":null,"code":"var _jsxFileName = \"/Users/muhammad/Desktop/charity-fund-project/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Button } from '../components/ui/Button';\n// import { Input } from '../components/ui/Input';\n// import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from '../components/ui/Dialog';\n// import { Checkbox } from '../components/ui/Checkbox';\n// import { Progress } from '../components/ui/Progress';\n// import { UserIcon } from 'lucide-react';\n// import axios from 'axios';\n// import { loadStripe } from '../stripe/stripe-js';\n// import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n// const stripePromise = loadStripe('your-publishable-key');\n\n// export default function HomePage() {\n//   const [showProfile, setShowProfile] = useState(false);\n//   const [showCardModal, setShowCardModal] = useState(false);\n//   const [paymentAmount, setPaymentAmount] = useState('');\n//   const [isRecurring, setIsRecurring] = useState(false);\n//   const [progress, setProgress] = useState(0);\n//   const [infoText, setInfoText] = useState('');\n//   const [fundName, setFundName] = useState('');\n//   const [fundGoal, setFundGoal] = useState(0);\n//   const userId = localStorage.getItem('userId');\n//   const accessToken = localStorage.getItem('accessToken');\n\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/api/admin/fund-settings/')\n//       .then(response => {\n//         setInfoText(response.data.info_text);\n//         setFundName(response.data.fund_name);\n//         setFundGoal(response.data.fund_goal);\n//         const progressPercentage = (response.data.total_raised / response.data.fund_goal) * 100;\n//         setProgress(progressPercentage);\n//       })\n//       .catch(error => {\n//         console.error('Failed to fetch fund settings:', error);\n//       });\n//   }, []);\n\n//   const handlePayment = async (e) => {\n//     e.preventDefault();\n//     setShowCardModal(true);\n//   };\n\n//   const handleCardPayment = async (e) => {\n//     e.preventDefault();\n\n//     if (!stripe || !elements) {\n//       return;\n//     }\n\n//     const cardElement = elements.getElement(CardElement);\n\n//     try {\n//       const { paymentMethod } = await stripe.createPaymentMethod({\n//         type: 'card',\n//         card: cardElement,\n//       });\n\n//       await axios.post('http://localhost:8000/api/payments/process/', {\n//         user_id: userId,\n//         amount: paymentAmount,\n//         payment_method_id: paymentMethod.id,\n//         is_recurring: isRecurring,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       alert('Payment successful!');\n//       setShowCardModal(false);\n//     } catch (error) {\n//       console.error('Payment failed:', error);\n//       alert('Payment failed.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100\">\n//       <header className=\"bg-white shadow-sm\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n//           <h1 className=\"text-2xl font-bold\">Charity Fund</h1>\n//           <Button variant=\"ghost\" onClick={() => setShowProfile(true)}>\n//             <UserIcon className=\"h-6 w-6\" />\n//           </Button>\n//         </div>\n//       </header>\n\n//       <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Make a Payment</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <form onSubmit={handlePayment} className=\"space-y-4\">\n//                 <Input\n//                   type=\"number\"\n//                   placeholder=\"Amount\"\n//                   value={paymentAmount}\n//                   onChange={(e) => setPaymentAmount(e.target.value)}\n//                   required\n//                 />\n//                 <div className=\"flex items-center space-x-2\">\n//                   <Checkbox\n//                     id=\"recurring\"\n//                     checked={isRecurring}\n//                     onCheckedChange={(checked) => setIsRecurring(checked)}\n//                   />\n//                   <label htmlFor=\"recurring\">Set up recurring payment</label>\n//                 </div>\n//                 <Button type=\"submit\" className=\"w-full\">Pay</Button>\n//               </form>\n//             </CardContent>\n//           </Card>\n\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Information</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <p>{infoText}</p>\n//             </CardContent>\n//           </Card>\n//         </div>\n\n//         <Card className=\"mt-8\">\n//           <CardHeader>\n//             <CardTitle>{fundName}</CardTitle>\n//           </CardHeader>\n//           <CardContent>\n//             <Progress value={progress} className=\"w-full\" />\n//             <p className=\"mt-2 text-center\">{progress.toFixed(2)}% of the target amount raised</p>\n//           </CardContent>\n//         </Card>\n//       </main>\n\n//       <Dialog open={showProfile} onOpenChange={setShowProfile}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Profile</DialogTitle>\n//           </DialogHeader>\n//           <div className=\"space-y-4\">\n//             <Button className=\"w-full\">Change Phone Number</Button>\n//             <Button className=\"w-full\">Change Payment Details</Button>\n//             <Button variant=\"destructive\" className=\"w-full\">Delete Account</Button>\n//           </div>\n//         </DialogContent>\n//       </Dialog>\n\n//       <Dialog open={showCardModal} onOpenChange={setShowCardModal}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Link Card</DialogTitle>\n//           </DialogHeader>\n//           <form onSubmit={handleCardPayment} className=\"space-y-4\">\n//             <CardElement options={{ hidePostalCode: true }} />\n//             <Button type=\"submit\" className=\"w-full\">Link and Pay</Button>\n//           </form>\n//         </DialogContent>\n//       </Dialog>\n//     </div>\n//   );\n// }\n\n// // Wrap HomePage with Elements for Stripe\n\n// export function HomePageWrapper() {\n//   return (\n//     <Elements stripe={stripePromise}>\n//       <HomePage />\n//     </Elements>\n//   );\n// }\n\n//////////////////////////////////////////////////////////\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button';\nimport { Input } from '../components/ui/Input';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '../components/ui/Dialog';\nimport { Checkbox } from '../components/ui/Checkbox';\nimport { Progress } from '../components/ui/Progress';\nimport { UserIcon } from 'lucide-react';\nimport axios from 'axios';\n// import { loadStripe } from '../stripe/stripe-js';\n// import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n// const stripePromise = loadStripe('your-publishable-key');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [showProfile, setShowProfile] = useState(false);\n  const [showCardModal, setShowCardModal] = useState(false);\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [infoText, setInfoText] = useState('');\n  const [fundName, setFundName] = useState('');\n  const [fundGoal, setFundGoal] = useState(0);\n  const userId = localStorage.getItem('userId');\n  const accessToken = localStorage.getItem('accessToken');\n\n  // const stripe = useStripe();\n  // const elements = useElements();\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/admin/fund-settings/').then(response => {\n      setInfoText(response.data.info_text);\n      setFundName(response.data.fund_name);\n      setFundGoal(response.data.fund_goal);\n      const progressPercentage = response.data.total_raised / response.data.fund_goal * 100;\n      setProgress(progressPercentage);\n    }).catch(error => {\n      console.error('Failed to fetch fund settings:', error);\n    });\n  }, []);\n  const handlePayment = async e => {\n    e.preventDefault();\n    setShowCardModal(true);\n  };\n\n  // Закомментированный код обработки платежа с помощью карты\n  /*\n  const handleCardPayment = async (e) => {\n    e.preventDefault();\n     if (!stripe || !elements) {\n      return;\n    }\n     const cardElement = elements.getElement(CardElement);\n     try {\n      const { paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n      });\n       await axios.post('http://localhost:8000/api/payments/process/', {\n        user_id: userId,\n        amount: paymentAmount,\n        payment_method_id: paymentMethod.id,\n        is_recurring: isRecurring,\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n       alert('Payment successful!');\n      setShowCardModal(false);\n    } catch (error) {\n      console.error('Payment failed:', error);\n      alert('Payment failed.');\n    }\n  };\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Charity Fund\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          onClick: () => setShowProfile(true),\n          children: /*#__PURE__*/_jsxDEV(UserIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"Make a Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handlePayment,\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                placeholder: \"Amount\",\n                value: paymentAmount,\n                onChange: e => setPaymentAmount(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"recurring\",\n                  checked: isRecurring,\n                  onCheckedChange: checked => setIsRecurring(checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"recurring\",\n                  children: \"Set up recurring payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"w-full\",\n                children: \"Pay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: infoText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: fundName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Progress, {\n            value: progress,\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-center\",\n            children: [progress.toFixed(2), \"% of the target amount raised\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showProfile,\n      onOpenChange: setShowProfile,\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogHeader, {\n          children: /*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-full\",\n            children: \"Change Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-full\",\n            children: \"Change Payment Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"destructive\",\n            className: \"w-full\",\n            children: \"Delete Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n\n// Закомментированный код обертки HomePage с элементами Stripe\n/*\nexport function HomePageWrapper() {\n  return (\n    <Elements stripe={stripePromise}>\n      <HomePage />\n    </Elements>\n  );\n}\n*/\n_s(HomePage, \"6mUDR08E2TNyXMp9+uCa6B1K1Y4=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Input","Card","CardContent","CardHeader","CardTitle","Dialog","DialogContent","DialogHeader","DialogTitle","Checkbox","Progress","UserIcon","axios","jsxDEV","_jsxDEV","HomePage","_s","showProfile","setShowProfile","showCardModal","setShowCardModal","paymentAmount","setPaymentAmount","isRecurring","setIsRecurring","progress","setProgress","infoText","setInfoText","fundName","setFundName","fundGoal","setFundGoal","userId","localStorage","getItem","accessToken","get","then","response","data","info_text","fund_name","fund_goal","progressPercentage","total_raised","catch","error","console","handlePayment","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","onSubmit","type","placeholder","value","onChange","target","required","id","checked","onCheckedChange","htmlFor","toFixed","open","onOpenChange","_c","$RefreshReg$"],"sources":["/Users/muhammad/Desktop/charity-fund-project/frontend/src/pages/HomePage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Button } from '../components/ui/Button';\n// import { Input } from '../components/ui/Input';\n// import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from '../components/ui/Dialog';\n// import { Checkbox } from '../components/ui/Checkbox';\n// import { Progress } from '../components/ui/Progress';\n// import { UserIcon } from 'lucide-react';\n// import axios from 'axios';\n// import { loadStripe } from '../stripe/stripe-js';\n// import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n\n\n\n// const stripePromise = loadStripe('your-publishable-key');\n\n// export default function HomePage() {\n//   const [showProfile, setShowProfile] = useState(false);\n//   const [showCardModal, setShowCardModal] = useState(false);\n//   const [paymentAmount, setPaymentAmount] = useState('');\n//   const [isRecurring, setIsRecurring] = useState(false);\n//   const [progress, setProgress] = useState(0);\n//   const [infoText, setInfoText] = useState('');\n//   const [fundName, setFundName] = useState('');\n//   const [fundGoal, setFundGoal] = useState(0);\n//   const userId = localStorage.getItem('userId');\n//   const accessToken = localStorage.getItem('accessToken');\n\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/api/admin/fund-settings/')\n//       .then(response => {\n//         setInfoText(response.data.info_text);\n//         setFundName(response.data.fund_name);\n//         setFundGoal(response.data.fund_goal);\n//         const progressPercentage = (response.data.total_raised / response.data.fund_goal) * 100;\n//         setProgress(progressPercentage);\n//       })\n//       .catch(error => {\n//         console.error('Failed to fetch fund settings:', error);\n//       });\n//   }, []);\n\n//   const handlePayment = async (e) => {\n//     e.preventDefault();\n//     setShowCardModal(true);\n//   };\n\n//   const handleCardPayment = async (e) => {\n//     e.preventDefault();\n\n//     if (!stripe || !elements) {\n//       return;\n//     }\n\n//     const cardElement = elements.getElement(CardElement);\n\n//     try {\n//       const { paymentMethod } = await stripe.createPaymentMethod({\n//         type: 'card',\n//         card: cardElement,\n//       });\n\n//       await axios.post('http://localhost:8000/api/payments/process/', {\n//         user_id: userId,\n//         amount: paymentAmount,\n//         payment_method_id: paymentMethod.id,\n//         is_recurring: isRecurring,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       alert('Payment successful!');\n//       setShowCardModal(false);\n//     } catch (error) {\n//       console.error('Payment failed:', error);\n//       alert('Payment failed.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100\">\n//       <header className=\"bg-white shadow-sm\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n//           <h1 className=\"text-2xl font-bold\">Charity Fund</h1>\n//           <Button variant=\"ghost\" onClick={() => setShowProfile(true)}>\n//             <UserIcon className=\"h-6 w-6\" />\n//           </Button>\n//         </div>\n//       </header>\n\n//       <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Make a Payment</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <form onSubmit={handlePayment} className=\"space-y-4\">\n//                 <Input\n//                   type=\"number\"\n//                   placeholder=\"Amount\"\n//                   value={paymentAmount}\n//                   onChange={(e) => setPaymentAmount(e.target.value)}\n//                   required\n//                 />\n//                 <div className=\"flex items-center space-x-2\">\n//                   <Checkbox\n//                     id=\"recurring\"\n//                     checked={isRecurring}\n//                     onCheckedChange={(checked) => setIsRecurring(checked)}\n//                   />\n//                   <label htmlFor=\"recurring\">Set up recurring payment</label>\n//                 </div>\n//                 <Button type=\"submit\" className=\"w-full\">Pay</Button>\n//               </form>\n//             </CardContent>\n//           </Card>\n\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Information</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <p>{infoText}</p>\n//             </CardContent>\n//           </Card>\n//         </div>\n\n//         <Card className=\"mt-8\">\n//           <CardHeader>\n//             <CardTitle>{fundName}</CardTitle>\n//           </CardHeader>\n//           <CardContent>\n//             <Progress value={progress} className=\"w-full\" />\n//             <p className=\"mt-2 text-center\">{progress.toFixed(2)}% of the target amount raised</p>\n//           </CardContent>\n//         </Card>\n//       </main>\n\n//       <Dialog open={showProfile} onOpenChange={setShowProfile}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Profile</DialogTitle>\n//           </DialogHeader>\n//           <div className=\"space-y-4\">\n//             <Button className=\"w-full\">Change Phone Number</Button>\n//             <Button className=\"w-full\">Change Payment Details</Button>\n//             <Button variant=\"destructive\" className=\"w-full\">Delete Account</Button>\n//           </div>\n//         </DialogContent>\n//       </Dialog>\n\n//       <Dialog open={showCardModal} onOpenChange={setShowCardModal}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Link Card</DialogTitle>\n//           </DialogHeader>\n//           <form onSubmit={handleCardPayment} className=\"space-y-4\">\n//             <CardElement options={{ hidePostalCode: true }} />\n//             <Button type=\"submit\" className=\"w-full\">Link and Pay</Button>\n//           </form>\n//         </DialogContent>\n//       </Dialog>\n//     </div>\n//   );\n// }\n\n// // Wrap HomePage with Elements for Stripe\n\n\n\n// export function HomePageWrapper() {\n//   return (\n//     <Elements stripe={stripePromise}>\n//       <HomePage />\n//     </Elements>\n//   );\n// }\n\n\n//////////////////////////////////////////////////////////\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button';\nimport { Input } from '../components/ui/Input';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '../components/ui/Dialog';\nimport { Checkbox } from '../components/ui/Checkbox';\nimport { Progress } from '../components/ui/Progress';\nimport { UserIcon } from 'lucide-react';\nimport axios from 'axios';\n// import { loadStripe } from '../stripe/stripe-js';\n// import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n// const stripePromise = loadStripe('your-publishable-key');\n\nexport default function HomePage() {\n  const [showProfile, setShowProfile] = useState(false);\n  const [showCardModal, setShowCardModal] = useState(false);\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [infoText, setInfoText] = useState('');\n  const [fundName, setFundName] = useState('');\n  const [fundGoal, setFundGoal] = useState(0);\n  const userId = localStorage.getItem('userId');\n  const accessToken = localStorage.getItem('accessToken');\n\n  // const stripe = useStripe();\n  // const elements = useElements();\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/admin/fund-settings/')\n      .then(response => {\n        setInfoText(response.data.info_text);\n        setFundName(response.data.fund_name);\n        setFundGoal(response.data.fund_goal);\n        const progressPercentage = (response.data.total_raised / response.data.fund_goal) * 100;\n        setProgress(progressPercentage);\n      })\n      .catch(error => {\n        console.error('Failed to fetch fund settings:', error);\n      });\n  }, []);\n\n  const handlePayment = async (e) => {\n    e.preventDefault();\n    setShowCardModal(true);\n  };\n\n  // Закомментированный код обработки платежа с помощью карты\n  /*\n  const handleCardPayment = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n\n    try {\n      const { paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n      });\n\n      await axios.post('http://localhost:8000/api/payments/process/', {\n        user_id: userId,\n        amount: paymentAmount,\n        payment_method_id: paymentMethod.id,\n        is_recurring: isRecurring,\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      alert('Payment successful!');\n      setShowCardModal(false);\n    } catch (error) {\n      console.error('Payment failed:', error);\n      alert('Payment failed.');\n    }\n  };\n  */\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold\">Charity Fund</h1>\n          <Button variant=\"ghost\" onClick={() => setShowProfile(true)}>\n            <UserIcon className=\"h-6 w-6\" />\n          </Button>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Make a Payment</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handlePayment} className=\"space-y-4\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Amount\"\n                  value={paymentAmount}\n                  onChange={(e) => setPaymentAmount(e.target.value)}\n                  required\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"recurring\"\n                    checked={isRecurring}\n                    onCheckedChange={(checked) => setIsRecurring(checked)}\n                  />\n                  <label htmlFor=\"recurring\">Set up recurring payment</label>\n                </div>\n                <Button type=\"submit\" className=\"w-full\">Pay</Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Information</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p>{infoText}</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card className=\"mt-8\">\n          <CardHeader>\n            <CardTitle>{fundName}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Progress value={progress} className=\"w-full\" />\n            <p className=\"mt-2 text-center\">{progress.toFixed(2)}% of the target amount raised</p>\n          </CardContent>\n        </Card>\n      </main>\n\n      <Dialog open={showProfile} onOpenChange={setShowProfile}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Profile</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <Button className=\"w-full\">Change Phone Number</Button>\n            <Button className=\"w-full\">Change Payment Details</Button>\n            <Button variant=\"destructive\" className=\"w-full\">Delete Account</Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Закомментированный код для привязки карты */}\n      {/*\n      <Dialog open={showCardModal} onOpenChange={setShowCardModal}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Link Card</DialogTitle>\n          </DialogHeader>\n          <form onSubmit={handleCardPayment} className=\"space-y-4\">\n            <CardElement options={{ hidePostalCode: true }} />\n            <Button type=\"submit\" className=\"w-full\">Link and Pay</Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n      */}\n    </div>\n  );\n}\n\n// Закомментированный код обертки HomePage с элементами Stripe\n/*\nexport function HomePageWrapper() {\n  return (\n    <Elements stripe={stripePromise}>\n      <HomePage />\n    </Elements>\n  );\n}\n*/\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,QAAQ,uBAAuB;AAChF,SAASC,MAAM,EAAEC,aAAa,EAAEC,YAAY,EAAEC,WAAW,QAAQ,yBAAyB;AAC1F,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;;AAEA;AAAA,SAAAC,MA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}