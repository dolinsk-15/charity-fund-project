{"ast":null,"code":"var _jsxFileName = \"/Users/muhammad/Desktop/charity-fund-project/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import AuthPage from './pages/AuthPage';\n// // import { HomePageWrapper } from './pages/HomePage';  // Импортируем HomePageWrapper вместо HomePage\n// import HomePage from './pages/HomePage';\n\n// import AdminPage from './pages/AdminPage';\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<AuthPage />} />\n//         <Route path=\"/home\" element={<HomePage />} />\n//         <Route path=\"/admin\" element={<AdminPage />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// function App() {\n//   return (\n//     <div className=\"min-h-screen bg-blue-500 flex items-center justify-center\">\n//       <h1 className=\"text-3xl text-white font-bold\">Testing Tailwind CSS!</h1>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { Button } from './components/ui/Button';\n// import { Input } from './components/ui/Input';\n// import { Card, CardContent, CardHeader, CardTitle } from './components/ui/Card';\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from './components/ui/Dialog';\n// import { Checkbox } from './components/ui/Checkbox';\n// import { Progress } from './components/ui/Progress';\n// import { UserIcon } from 'lucide-react';\n// import axios from 'axios';\n// // import { loadStripe } from '../stripe/stripe-js';\n// // import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n// // const stripePromise = loadStripe('your-publishable-key');\n\n// export default function HomePage() {\n//   const [showProfile, setShowProfile] = useState(false);\n//   const [showCardModal, setShowCardModal] = useState(false);\n//   const [paymentAmount, setPaymentAmount] = useState('');\n//   const [isRecurring, setIsRecurring] = useState(false);\n//   const [progress, setProgress] = useState(0);\n//   const [infoText, setInfoText] = useState('');\n//   const [fundName, setFundName] = useState('');\n//   const [fundGoal, setFundGoal] = useState(0);\n//   const userId = localStorage.getItem('userId');\n//   const accessToken = localStorage.getItem('accessToken');\n\n//   // const stripe = useStripe();\n//   // const elements = useElements();\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/api/admin/fund-settings/')\n//       .then(response => {\n//         setInfoText(response.data.info_text);\n//         setFundName(response.data.fund_name);\n//         setFundGoal(response.data.fund_goal);\n//         const progressPercentage = (response.data.total_raised / response.data.fund_goal) * 100;\n//         setProgress(progressPercentage);\n//       })\n//       .catch(error => {\n//         console.error('Failed to fetch fund settings:', error);\n//       });\n//   }, []);\n\n//   const handlePayment = async (e) => {\n//     e.preventDefault();\n//     setShowCardModal(true);\n//   };\n\n//   // Закомментированный код обработки платежа с помощью карты\n//   /*\n//   const handleCardPayment = async (e) => {\n//     e.preventDefault();\n\n//     if (!stripe || !elements) {\n//       return;\n//     }\n\n//     const cardElement = elements.getElement(CardElement);\n\n//     try {\n//       const { paymentMethod } = await stripe.createPaymentMethod({\n//         type: 'card',\n//         card: cardElement,\n//       });\n\n//       await axios.post('http://localhost:8000/api/payments/process/', {\n//         user_id: userId,\n//         amount: paymentAmount,\n//         payment_method_id: paymentMethod.id,\n//         is_recurring: isRecurring,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       alert('Payment successful!');\n//       setShowCardModal(false);\n//     } catch (error) {\n//       console.error('Payment failed:', error);\n//       alert('Payment failed.');\n//     }\n//   };\n//   */\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100\">\n//       <header className=\"bg-white shadow-sm\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n//           <h1 className=\"text-2xl font-bold\">Charity Fund</h1>\n//           <Button variant=\"ghost\" onClick={() => setShowProfile(true)}>\n//             <UserIcon className=\"h-6 w-6\" />\n//           </Button>\n//         </div>\n//       </header>\n\n//       <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Make a Payment</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <form onSubmit={handlePayment} className=\"space-y-4\">\n//                 <Input\n//                   type=\"number\"\n//                   placeholder=\"Amount\"\n//                   value={paymentAmount}\n//                   onChange={(e) => setPaymentAmount(e.target.value)}\n//                   required\n//                 />\n//                 <div className=\"flex items-center space-x-2\">\n//                   <Checkbox\n//                     id=\"recurring\"\n//                     checked={isRecurring}\n//                     onCheckedChange={(checked) => setIsRecurring(checked)}\n//                   />\n//                   <label htmlFor=\"recurring\">Set up auto payment</label>\n//                 </div>\n//                 <Button type=\"submit\" className=\"w-full\">Pay</Button>\n//               </form>\n//             </CardContent>\n//           </Card>\n\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Information</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <p>{infoText}</p>\n//             </CardContent>\n//           </Card>\n//         </div>\n\n//         <Card className=\"mt-8\">\n//           <CardHeader>\n//             <CardTitle>{fundName}</CardTitle>\n//           </CardHeader>\n//           <CardContent>\n//             <Progress value={progress} className=\"w-full\" />\n//             <p className=\"mt-2 text-center\">{progress.toFixed(2)}% of the target amount raised</p>\n//           </CardContent>\n//         </Card>\n//       </main>\n\n//       <Dialog open={showProfile} onOpenChange={setShowProfile}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Profile</DialogTitle>\n//           </DialogHeader>\n//           <div className=\"space-y-4\">\n//             <Button className=\"w-full\">Change Phone Number</Button>\n//             <Button className=\"w-full\">Change Payment Details</Button>\n//             <Button variant=\"destructive\" className=\"w-full\">Delete Account</Button>\n//           </div>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Закомментированный код для привязки карты */}\n//       {/*\n//       <Dialog open={showCardModal} onOpenChange={setShowCardModal}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Link Card</DialogTitle>\n//           </DialogHeader>\n//           <form onSubmit={handleCardPayment} className=\"space-y-4\">\n//             <CardElement options={{ hidePostalCode: true }} />\n//             <Button type=\"submit\" className=\"w-full\">Link and Pay</Button>\n//           </form>\n//         </DialogContent>\n//       </Dialog>\n//       */}\n//     </div>\n//   );\n// }\n\n// // Закомментированный код обертки HomePage с элементами Stripe\n// /*\n// export function HomePageWrapper() {\n//   return (\n//     <Elements stripe={stripePromise}>\n//       <HomePage />\n//     </Elements>\n//   );\n// }\n// */\n\n/////////////////////////////////////////////////////\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button';\nimport { Input } from '../components/ui/Input';\nimport { Textarea } from '../components/ui/Textarea';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport { Switch } from '../components/ui/Switch';\n// import axios from 'axios'; // Убираем для локальной работы\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPage() {\n  _s();\n  const [fundInfo, setFundInfo] = useState('');\n  const [fundName, setFundName] = useState('');\n  const [fundGoal, setFundGoal] = useState('');\n  const [showProgressBar, setShowProgressBar] = useState(true);\n  // const accessToken = localStorage.getItem('accessToken'); // Не нужен для локального запуска\n\n  // useEffect(() => {\n  //   // Имитация загрузки данных из API\n  //   axios.get('http://localhost:8000/api/admin/fund-settings/', {\n  //     headers: {\n  //       Authorization: `Bearer ${accessToken}`,\n  //     },\n  //   })\n  //     .then(response => {\n  //       setFundInfo(response.data.info_text);\n  //       setFundName(response.data.fund_name);\n  //       setFundGoal(response.data.fund_goal);\n  //       setShowProgressBar(response.data.show_progress_bar);\n  //     })\n  //     .catch(error => {\n  //       console.error('Failed to fetch fund settings:', error);\n  //     });\n  // }, [accessToken]);\n\n  // Имитация загрузки данных при монтировании\n  useEffect(() => {\n    // Здесь можно установить данные по умолчанию\n    setFundInfo('Пример информации о фонде');\n    setFundName('Пример имени фонда');\n    setFundGoal('10000');\n    setShowProgressBar(true);\n  }, []);\n  const handleUpdateFundInfo = () => {\n    // Имитация обновления информации о фонде\n    alert('Fund info updated locally: ' + fundInfo);\n  };\n  const handleUpdateFundSettings = () => {\n    // Имитация обновления настроек фонда\n    alert('Fund settings updated locally: ' + JSON.stringify({\n      fund_name: fundName,\n      fund_goal: fundGoal,\n      show_progress_bar: showProgressBar\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-8\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Update Fund Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Textarea, {\n            placeholder: \"Enter fund information\",\n            value: fundInfo,\n            onChange: e => setFundInfo(e.target.value),\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateFundInfo,\n            className: \"w-full\",\n            children: \"Update Fund Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Manage Fund Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Fund name\",\n            value: fundName,\n            onChange: e => setFundName(e.target.value),\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"Fundraising goal\",\n            value: fundGoal,\n            onChange: e => setFundGoal(e.target.value),\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Show progress bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              checked: showProgressBar,\n              onCheckedChange: setShowProgressBar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateFundSettings,\n            className: \"w-full\",\n            children: \"Update Fund Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"muyvJNZ1A/1fd8+cdvp6RzVGizc=\");\n_c = AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Input","Textarea","Card","CardContent","CardHeader","CardTitle","Switch","jsxDEV","_jsxDEV","AdminPage","_s","fundInfo","setFundInfo","fundName","setFundName","fundGoal","setFundGoal","showProgressBar","setShowProgressBar","handleUpdateFundInfo","alert","handleUpdateFundSettings","JSON","stringify","fund_name","fund_goal","show_progress_bar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","type","checked","onCheckedChange","_c","$RefreshReg$"],"sources":["/Users/muhammad/Desktop/charity-fund-project/frontend/src/App.js"],"sourcesContent":["\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import AuthPage from './pages/AuthPage';\n// // import { HomePageWrapper } from './pages/HomePage';  // Импортируем HomePageWrapper вместо HomePage\n// import HomePage from './pages/HomePage';\n\n// import AdminPage from './pages/AdminPage';\n\n// function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<AuthPage />} />\n//         <Route path=\"/home\" element={<HomePage />} />\n//         <Route path=\"/admin\" element={<AdminPage />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"min-h-screen bg-blue-500 flex items-center justify-center\">\n//       <h1 className=\"text-3xl text-white font-bold\">Testing Tailwind CSS!</h1>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { Button } from './components/ui/Button';\n// import { Input } from './components/ui/Input';\n// import { Card, CardContent, CardHeader, CardTitle } from './components/ui/Card';\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from './components/ui/Dialog';\n// import { Checkbox } from './components/ui/Checkbox';\n// import { Progress } from './components/ui/Progress';\n// import { UserIcon } from 'lucide-react';\n// import axios from 'axios';\n// // import { loadStripe } from '../stripe/stripe-js';\n// // import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n// // const stripePromise = loadStripe('your-publishable-key');\n\n// export default function HomePage() {\n//   const [showProfile, setShowProfile] = useState(false);\n//   const [showCardModal, setShowCardModal] = useState(false);\n//   const [paymentAmount, setPaymentAmount] = useState('');\n//   const [isRecurring, setIsRecurring] = useState(false);\n//   const [progress, setProgress] = useState(0);\n//   const [infoText, setInfoText] = useState('');\n//   const [fundName, setFundName] = useState('');\n//   const [fundGoal, setFundGoal] = useState(0);\n//   const userId = localStorage.getItem('userId');\n//   const accessToken = localStorage.getItem('accessToken');\n\n//   // const stripe = useStripe();\n//   // const elements = useElements();\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/api/admin/fund-settings/')\n//       .then(response => {\n//         setInfoText(response.data.info_text);\n//         setFundName(response.data.fund_name);\n//         setFundGoal(response.data.fund_goal);\n//         const progressPercentage = (response.data.total_raised / response.data.fund_goal) * 100;\n//         setProgress(progressPercentage);\n//       })\n//       .catch(error => {\n//         console.error('Failed to fetch fund settings:', error);\n//       });\n//   }, []);\n\n//   const handlePayment = async (e) => {\n//     e.preventDefault();\n//     setShowCardModal(true);\n//   };\n\n//   // Закомментированный код обработки платежа с помощью карты\n//   /*\n//   const handleCardPayment = async (e) => {\n//     e.preventDefault();\n\n//     if (!stripe || !elements) {\n//       return;\n//     }\n\n//     const cardElement = elements.getElement(CardElement);\n\n//     try {\n//       const { paymentMethod } = await stripe.createPaymentMethod({\n//         type: 'card',\n//         card: cardElement,\n//       });\n\n//       await axios.post('http://localhost:8000/api/payments/process/', {\n//         user_id: userId,\n//         amount: paymentAmount,\n//         payment_method_id: paymentMethod.id,\n//         is_recurring: isRecurring,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       alert('Payment successful!');\n//       setShowCardModal(false);\n//     } catch (error) {\n//       console.error('Payment failed:', error);\n//       alert('Payment failed.');\n//     }\n//   };\n//   */\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100\">\n//       <header className=\"bg-white shadow-sm\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n//           <h1 className=\"text-2xl font-bold\">Charity Fund</h1>\n//           <Button variant=\"ghost\" onClick={() => setShowProfile(true)}>\n//             <UserIcon className=\"h-6 w-6\" />\n//           </Button>\n//         </div>\n//       </header>\n\n//       <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Make a Payment</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <form onSubmit={handlePayment} className=\"space-y-4\">\n//                 <Input\n//                   type=\"number\"\n//                   placeholder=\"Amount\"\n//                   value={paymentAmount}\n//                   onChange={(e) => setPaymentAmount(e.target.value)}\n//                   required\n//                 />\n//                 <div className=\"flex items-center space-x-2\">\n//                   <Checkbox\n//                     id=\"recurring\"\n//                     checked={isRecurring}\n//                     onCheckedChange={(checked) => setIsRecurring(checked)}\n//                   />\n//                   <label htmlFor=\"recurring\">Set up auto payment</label>\n//                 </div>\n//                 <Button type=\"submit\" className=\"w-full\">Pay</Button>\n//               </form>\n//             </CardContent>\n//           </Card>\n\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Information</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <p>{infoText}</p>\n//             </CardContent>\n//           </Card>\n//         </div>\n\n//         <Card className=\"mt-8\">\n//           <CardHeader>\n//             <CardTitle>{fundName}</CardTitle>\n//           </CardHeader>\n//           <CardContent>\n//             <Progress value={progress} className=\"w-full\" />\n//             <p className=\"mt-2 text-center\">{progress.toFixed(2)}% of the target amount raised</p>\n//           </CardContent>\n//         </Card>\n//       </main>\n\n//       <Dialog open={showProfile} onOpenChange={setShowProfile}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Profile</DialogTitle>\n//           </DialogHeader>\n//           <div className=\"space-y-4\">\n//             <Button className=\"w-full\">Change Phone Number</Button>\n//             <Button className=\"w-full\">Change Payment Details</Button>\n//             <Button variant=\"destructive\" className=\"w-full\">Delete Account</Button>\n//           </div>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Закомментированный код для привязки карты */}\n//       {/*\n//       <Dialog open={showCardModal} onOpenChange={setShowCardModal}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Link Card</DialogTitle>\n//           </DialogHeader>\n//           <form onSubmit={handleCardPayment} className=\"space-y-4\">\n//             <CardElement options={{ hidePostalCode: true }} />\n//             <Button type=\"submit\" className=\"w-full\">Link and Pay</Button>\n//           </form>\n//         </DialogContent>\n//       </Dialog>\n//       */}\n//     </div>\n//   );\n// }\n\n// // Закомментированный код обертки HomePage с элементами Stripe\n// /*\n// export function HomePageWrapper() {\n//   return (\n//     <Elements stripe={stripePromise}>\n//       <HomePage />\n//     </Elements>\n//   );\n// }\n// */\n\n\n\n/////////////////////////////////////////////////////\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button';\nimport { Input } from '../components/ui/Input';\nimport { Textarea } from '../components/ui/Textarea';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport { Switch } from '../components/ui/Switch';\n// import axios from 'axios'; // Убираем для локальной работы\n\nexport default function AdminPage() {\n  const [fundInfo, setFundInfo] = useState('');\n  const [fundName, setFundName] = useState('');\n  const [fundGoal, setFundGoal] = useState('');\n  const [showProgressBar, setShowProgressBar] = useState(true);\n  // const accessToken = localStorage.getItem('accessToken'); // Не нужен для локального запуска\n\n  // useEffect(() => {\n  //   // Имитация загрузки данных из API\n  //   axios.get('http://localhost:8000/api/admin/fund-settings/', {\n  //     headers: {\n  //       Authorization: `Bearer ${accessToken}`,\n  //     },\n  //   })\n  //     .then(response => {\n  //       setFundInfo(response.data.info_text);\n  //       setFundName(response.data.fund_name);\n  //       setFundGoal(response.data.fund_goal);\n  //       setShowProgressBar(response.data.show_progress_bar);\n  //     })\n  //     .catch(error => {\n  //       console.error('Failed to fetch fund settings:', error);\n  //     });\n  // }, [accessToken]);\n\n  // Имитация загрузки данных при монтировании\n  useEffect(() => {\n    // Здесь можно установить данные по умолчанию\n    setFundInfo('Пример информации о фонде');\n    setFundName('Пример имени фонда');\n    setFundGoal('10000');\n    setShowProgressBar(true);\n  }, []);\n\n  const handleUpdateFundInfo = () => {\n    // Имитация обновления информации о фонде\n    alert('Fund info updated locally: ' + fundInfo);\n  };\n\n  const handleUpdateFundSettings = () => {\n    // Имитация обновления настроек фонда\n    alert('Fund settings updated locally: ' + JSON.stringify({\n      fund_name: fundName,\n      fund_goal: fundGoal,\n      show_progress_bar: showProgressBar,\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Admin Dashboard</h1>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Update Fund Information</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Textarea\n              placeholder=\"Enter fund information\"\n              value={fundInfo}\n              onChange={(e) => setFundInfo(e.target.value)}\n              className=\"mb-4\"\n            />\n            <Button onClick={handleUpdateFundInfo} className=\"w-full\">\n              Update Fund Info\n            </Button>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Manage Fund Settings</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Input\n              placeholder=\"Fund name\"\n              value={fundName}\n              onChange={(e) => setFundName(e.target.value)}\n              className=\"mb-4\"\n            />\n            <Input\n              type=\"number\"\n              placeholder=\"Fundraising goal\"\n              value={fundGoal}\n              onChange={(e) => setFundGoal(e.target.value)}\n              className=\"mb-4\"\n            />\n            <div className=\"flex items-center justify-between mb-4\">\n              <span>Show progress bar</span>\n              <Switch\n                checked={showProgressBar}\n                onCheckedChange={setShowProgressBar}\n              />\n            </div>\n            <Button onClick={handleUpdateFundSettings} className=\"w-full\">\n              Update Fund Settings\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,QAAQ,uBAAuB;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}