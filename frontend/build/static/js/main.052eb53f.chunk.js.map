{"version":3,"sources":["components/ui/Button.js","components/ui/Input.js","components/ui/Card.js","pages/AuthPage.js","components/ui/Dialog.js","components/ui/Checkbox.js","components/ui/Progress.js","pages/HomePage.js","components/ui/Textarea.js","components/ui/Switch.js","pages/AdminPage.js","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","children","className","props","React","createElement","Object","assign","Input","Card","CardHeader","_ref2","CardTitle","_ref3","CardContent","_ref4","AuthPage","phoneNumber","setPhoneNumber","useState","verificationCode","setVerificationCode","isCodeSent","setIsCodeSent","navigate","useNavigate","type","placeholder","value","onChange","e","target","onClick","async","response","axios","post","phone_number","code","localStorage","setItem","data","access","refresh","user_id","error","alert","Dialog","open","onOpenChange","stopPropagation","DialogContent","DialogHeader","DialogTitle","Checkbox","id","checked","onCheckedChange","Progress","style","width","HomePage","showProfile","setShowProfile","showCardModal","setShowCardModal","paymentAmount","setPaymentAmount","isRecurring","setIsRecurring","progress","setProgress","infoText","setInfoText","fundName","setFundName","fundGoal","setFundGoal","getItem","useEffect","get","then","info_text","fund_name","fund_goal","progressPercentage","total_raised","catch","console","variant","UserIcon","onSubmit","preventDefault","required","htmlFor","toFixed","Textarea","Switch","AdminPage","fundInfo","setFundInfo","showProgressBar","setShowProgressBar","accessToken","headers","Authorization","show_progress_bar","handleUpdateFundInfo","handleUpdateFundSettings","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.052eb53f.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Button({ children, className, ...props }) {\n  return (\n    <button className={`btn ${className}`} {...props}>\n      {children}\n    </button>\n  );\n}\n\n\n","import React from 'react';\n\nexport function Input({ className, ...props }) {\n  return (\n    <input className={`input ${className}`} {...props} />\n  );\n}\n","import React from 'react';\n\nexport function Card({ children, className }) {\n  return (\n    <div className={`card ${className}`}>\n      {children}\n    </div>\n  );\n}\n\nexport function CardHeader({ children }) {\n  return <div className=\"card-header\">{children}</div>;\n}\n\nexport function CardTitle({ children }) {\n  return <h2 className=\"card-title\">{children}</h2>;\n}\n\nexport function CardContent({ children }) {\n  return <div className=\"card-content\">{children}</div>;\n}\n","import React, { useState } from 'react';\nimport { Button } from '../components/ui/Button';\nimport { Input } from '../components/ui/Input';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function AuthPage() {\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSendCode = async () => {\n    try {\n      await axios.post('http://localhost:8000/api/auth/send-code/', {\n        phone_number: phoneNumber,\n      });\n      setIsCodeSent(true);\n    } catch (error) {\n      alert('Failed to send verification code.');\n    }\n  };\n\n  const handleVerify = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/auth/verify-code/', {\n        phone_number: phoneNumber,\n        code: verificationCode,\n      });\n      localStorage.setItem('accessToken', response.data.access);\n      localStorage.setItem('refreshToken', response.data.refresh);\n      localStorage.setItem('userId', response.data.user_id);\n      navigate('/home');\n    } catch (error) {\n      alert('Verification failed.');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n      <Card className=\"w-[350px]\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold text-center\">Charity Fund Authentication</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {!isCodeSent ? (\n            <div className=\"space-y-4\">\n              <Input\n                type=\"tel\"\n                placeholder=\"Enter your phone number\"\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n              />\n              <Button className=\"w-full\" onClick={handleSendCode}>\n                Send Verification Code\n              </Button>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <Input\n                type=\"text\"\n                placeholder=\"Enter verification code\"\n                value={verificationCode}\n                onChange={(e) => setVerificationCode(e.target.value)}\n              />\n              <Button className=\"w-full\" onClick={handleVerify}>\n                Verify Code\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function Dialog({ open, onOpenChange, children }) {\n  // Implement dialog functionality\n  return open ? (\n    <div className=\"dialog-overlay\" onClick={() => onOpenChange(false)}>\n      <div className=\"dialog-content\" onClick={(e) => e.stopPropagation()}>\n        {children}\n      </div>\n    </div>\n  ) : null;\n}\n\nexport function DialogContent({ children }) {\n  return <div>{children}</div>;\n}\n\nexport function DialogHeader({ children }) {\n  return <div className=\"dialog-header\">{children}</div>;\n}\n\nexport function DialogTitle({ children }) {\n  return <h3>{children}</h3>;\n}\n","import React from 'react';\n\nexport function Checkbox({ id, checked, onCheckedChange }) {\n  return (\n    <input\n      type=\"checkbox\"\n      id={id}\n      checked={checked}\n      onChange={(e) => onCheckedChange(e.target.checked)}\n    />\n  );\n}\n","import React from 'react';\n\nexport function Progress({ value, className }) {\n  return (\n    <div className={`progress-bar ${className}`}>\n      <div className=\"progress-bar-fill\" style={{ width: `${value}%` }}></div>\n    </div>\n  );\n}\n","// import React, { useState, useEffect } from 'react';\n// import { Button } from '../components/ui/Button';\n// import { Input } from '../components/ui/Input';\n// import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from '../components/ui/Dialog';\n// import { Checkbox } from '../components/ui/Checkbox';\n// import { Progress } from '../components/ui/Progress';\n// import { UserIcon } from 'lucide-react';\n// import axios from 'axios';\n// import { loadStripe } from '../stripe/stripe-js';\n// import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n\n\n\n// const stripePromise = loadStripe('your-publishable-key');\n\n// export default function HomePage() {\n//   const [showProfile, setShowProfile] = useState(false);\n//   const [showCardModal, setShowCardModal] = useState(false);\n//   const [paymentAmount, setPaymentAmount] = useState('');\n//   const [isRecurring, setIsRecurring] = useState(false);\n//   const [progress, setProgress] = useState(0);\n//   const [infoText, setInfoText] = useState('');\n//   const [fundName, setFundName] = useState('');\n//   const [fundGoal, setFundGoal] = useState(0);\n//   const userId = localStorage.getItem('userId');\n//   const accessToken = localStorage.getItem('accessToken');\n\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/api/admin/fund-settings/')\n//       .then(response => {\n//         setInfoText(response.data.info_text);\n//         setFundName(response.data.fund_name);\n//         setFundGoal(response.data.fund_goal);\n//         const progressPercentage = (response.data.total_raised / response.data.fund_goal) * 100;\n//         setProgress(progressPercentage);\n//       })\n//       .catch(error => {\n//         console.error('Failed to fetch fund settings:', error);\n//       });\n//   }, []);\n\n//   const handlePayment = async (e) => {\n//     e.preventDefault();\n//     setShowCardModal(true);\n//   };\n\n//   const handleCardPayment = async (e) => {\n//     e.preventDefault();\n\n//     if (!stripe || !elements) {\n//       return;\n//     }\n\n//     const cardElement = elements.getElement(CardElement);\n\n//     try {\n//       const { paymentMethod } = await stripe.createPaymentMethod({\n//         type: 'card',\n//         card: cardElement,\n//       });\n\n//       await axios.post('http://localhost:8000/api/payments/process/', {\n//         user_id: userId,\n//         amount: paymentAmount,\n//         payment_method_id: paymentMethod.id,\n//         is_recurring: isRecurring,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       alert('Payment successful!');\n//       setShowCardModal(false);\n//     } catch (error) {\n//       console.error('Payment failed:', error);\n//       alert('Payment failed.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100\">\n//       <header className=\"bg-white shadow-sm\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n//           <h1 className=\"text-2xl font-bold\">Charity Fund</h1>\n//           <Button variant=\"ghost\" onClick={() => setShowProfile(true)}>\n//             <UserIcon className=\"h-6 w-6\" />\n//           </Button>\n//         </div>\n//       </header>\n\n//       <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Make a Payment</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <form onSubmit={handlePayment} className=\"space-y-4\">\n//                 <Input\n//                   type=\"number\"\n//                   placeholder=\"Amount\"\n//                   value={paymentAmount}\n//                   onChange={(e) => setPaymentAmount(e.target.value)}\n//                   required\n//                 />\n//                 <div className=\"flex items-center space-x-2\">\n//                   <Checkbox\n//                     id=\"recurring\"\n//                     checked={isRecurring}\n//                     onCheckedChange={(checked) => setIsRecurring(checked)}\n//                   />\n//                   <label htmlFor=\"recurring\">Set up recurring payment</label>\n//                 </div>\n//                 <Button type=\"submit\" className=\"w-full\">Pay</Button>\n//               </form>\n//             </CardContent>\n//           </Card>\n\n//           <Card>\n//             <CardHeader>\n//               <CardTitle>Information</CardTitle>\n//             </CardHeader>\n//             <CardContent>\n//               <p>{infoText}</p>\n//             </CardContent>\n//           </Card>\n//         </div>\n\n//         <Card className=\"mt-8\">\n//           <CardHeader>\n//             <CardTitle>{fundName}</CardTitle>\n//           </CardHeader>\n//           <CardContent>\n//             <Progress value={progress} className=\"w-full\" />\n//             <p className=\"mt-2 text-center\">{progress.toFixed(2)}% of the target amount raised</p>\n//           </CardContent>\n//         </Card>\n//       </main>\n\n//       <Dialog open={showProfile} onOpenChange={setShowProfile}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Profile</DialogTitle>\n//           </DialogHeader>\n//           <div className=\"space-y-4\">\n//             <Button className=\"w-full\">Change Phone Number</Button>\n//             <Button className=\"w-full\">Change Payment Details</Button>\n//             <Button variant=\"destructive\" className=\"w-full\">Delete Account</Button>\n//           </div>\n//         </DialogContent>\n//       </Dialog>\n\n//       <Dialog open={showCardModal} onOpenChange={setShowCardModal}>\n//         <DialogContent>\n//           <DialogHeader>\n//             <DialogTitle>Link Card</DialogTitle>\n//           </DialogHeader>\n//           <form onSubmit={handleCardPayment} className=\"space-y-4\">\n//             <CardElement options={{ hidePostalCode: true }} />\n//             <Button type=\"submit\" className=\"w-full\">Link and Pay</Button>\n//           </form>\n//         </DialogContent>\n//       </Dialog>\n//     </div>\n//   );\n// }\n\n// // Wrap HomePage with Elements for Stripe\n\n\n\n// export function HomePageWrapper() {\n//   return (\n//     <Elements stripe={stripePromise}>\n//       <HomePage />\n//     </Elements>\n//   );\n// }\n\n\n//////////////////////////////////////////////////////////\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button';\nimport { Input } from '../components/ui/Input';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '../components/ui/Dialog';\nimport { Checkbox } from '../components/ui/Checkbox';\nimport { Progress } from '../components/ui/Progress';\nimport { UserIcon } from 'lucide-react';\nimport axios from 'axios';\n// import { loadStripe } from '../stripe/stripe-js';\n// import { Elements, CardElement, useStripe, useElements } from '../stripe/react-stripe-js';\n\n// const stripePromise = loadStripe('your-publishable-key');\n\nexport default function HomePage() {\n  const [showProfile, setShowProfile] = useState(false);\n  const [showCardModal, setShowCardModal] = useState(false);\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [infoText, setInfoText] = useState('');\n  const [fundName, setFundName] = useState('');\n  const [fundGoal, setFundGoal] = useState(0);\n  const userId = localStorage.getItem('userId');\n  const accessToken = localStorage.getItem('accessToken');\n\n  // const stripe = useStripe();\n  // const elements = useElements();\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/admin/fund-settings/')\n      .then(response => {\n        setInfoText(response.data.info_text);\n        setFundName(response.data.fund_name);\n        setFundGoal(response.data.fund_goal);\n        const progressPercentage = (response.data.total_raised / response.data.fund_goal) * 100;\n        setProgress(progressPercentage);\n      })\n      .catch(error => {\n        console.error('Failed to fetch fund settings:', error);\n      });\n  }, []);\n\n  const handlePayment = async (e) => {\n    e.preventDefault();\n    setShowCardModal(true);\n  };\n\n  // Закомментированный код обработки платежа с помощью карты\n  /*\n  const handleCardPayment = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n\n    try {\n      const { paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n      });\n\n      await axios.post('http://localhost:8000/api/payments/process/', {\n        user_id: userId,\n        amount: paymentAmount,\n        payment_method_id: paymentMethod.id,\n        is_recurring: isRecurring,\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      alert('Payment successful!');\n      setShowCardModal(false);\n    } catch (error) {\n      console.error('Payment failed:', error);\n      alert('Payment failed.');\n    }\n  };\n  */\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <header className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold\">Charity Fund</h1>\n          <Button variant=\"ghost\" onClick={() => setShowProfile(true)}>\n            <UserIcon className=\"h-6 w-6\" />\n          </Button>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Make a Payment</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handlePayment} className=\"space-y-4\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Amount\"\n                  value={paymentAmount}\n                  onChange={(e) => setPaymentAmount(e.target.value)}\n                  required\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"recurring\"\n                    checked={isRecurring}\n                    onCheckedChange={(checked) => setIsRecurring(checked)}\n                  />\n                  <label htmlFor=\"recurring\">Set up recurring payment</label>\n                </div>\n                <Button type=\"submit\" className=\"w-full\">Pay</Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Information</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p>{infoText}</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card className=\"mt-8\">\n          <CardHeader>\n            <CardTitle>{fundName}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Progress value={progress} className=\"w-full\" />\n            <p className=\"mt-2 text-center\">{progress.toFixed(2)}% of the target amount raised</p>\n          </CardContent>\n        </Card>\n      </main>\n\n      <Dialog open={showProfile} onOpenChange={setShowProfile}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Profile</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <Button className=\"w-full\">Change Phone Number</Button>\n            <Button className=\"w-full\">Change Payment Details</Button>\n            <Button variant=\"destructive\" className=\"w-full\">Delete Account</Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Закомментированный код для привязки карты */}\n      {/*\n      <Dialog open={showCardModal} onOpenChange={setShowCardModal}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Link Card</DialogTitle>\n          </DialogHeader>\n          <form onSubmit={handleCardPayment} className=\"space-y-4\">\n            <CardElement options={{ hidePostalCode: true }} />\n            <Button type=\"submit\" className=\"w-full\">Link and Pay</Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n      */}\n    </div>\n  );\n}\n\n// Закомментированный код обертки HomePage с элементами Stripe\n/*\nexport function HomePageWrapper() {\n  return (\n    <Elements stripe={stripePromise}>\n      <HomePage />\n    </Elements>\n  );\n}\n*/\n\n","import React from 'react';\n\nexport function Textarea({ className, ...props }) {\n  return (\n    <textarea className={`textarea ${className}`} {...props}></textarea>\n  );\n}\n","import React from 'react';\n\nexport function Switch({ checked, onCheckedChange }) {\n  return (\n    <label className=\"switch\">\n      <input type=\"checkbox\" checked={checked} onChange={(e) => onCheckedChange(e.target.checked)} />\n      <span className=\"slider\"></span>\n    </label>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button';\nimport { Input } from '../components/ui/Input';\nimport { Textarea } from '../components/ui/Textarea';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport { Switch } from '../components/ui/Switch';\nimport axios from 'axios';\n\nexport default function AdminPage() {\n  const [fundInfo, setFundInfo] = useState('');\n  const [fundName, setFundName] = useState('');\n  const [fundGoal, setFundGoal] = useState('');\n  const [showProgressBar, setShowProgressBar] = useState(true);\n  const accessToken = localStorage.getItem('accessToken');\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/admin/fund-settings/', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then(response => {\n        setFundInfo(response.data.info_text);\n        setFundName(response.data.fund_name);\n        setFundGoal(response.data.fund_goal);\n        setShowProgressBar(response.data.show_progress_bar);\n      })\n      .catch(error => {\n        console.error('Failed to fetch fund settings:', error);\n      });\n  }, [accessToken]);\n\n  const handleUpdateFundInfo = () => {\n    axios.post('http://localhost:8000/api/admin/update-info/', {\n      info_text: fundInfo,\n    }, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n    .then(() => {\n      alert('Fund info updated.');\n    })\n    .catch(error => {\n      alert('Failed to update fund info.');\n    });\n  };\n\n  const handleUpdateFundSettings = () => {\n    axios.post('http://localhost:8000/api/admin/update-settings/', {\n      fund_name: fundName,\n      fund_goal: fundGoal,\n      show_progress_bar: showProgressBar,\n    }, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n    .then(() => {\n      alert('Fund settings updated.');\n    })\n    .catch(error => {\n      alert('Failed to update fund settings.');\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Admin Dashboard</h1>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Update Fund Information</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Textarea\n              placeholder=\"Enter fund information\"\n              value={fundInfo}\n              onChange={(e) => setFundInfo(e.target.value)}\n              className=\"mb-4\"\n            />\n            <Button onClick={handleUpdateFundInfo} className=\"w-full\">Update Fund Info</Button>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Manage Fund Settings</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Input\n              placeholder=\"Fund name\"\n              value={fundName}\n              onChange={(e) => setFundName(e.target.value)}\n              className=\"mb-4\"\n            />\n            <Input\n              type=\"number\"\n              placeholder=\"Fundraising goal\"\n              value={fundGoal}\n              onChange={(e) => setFundGoal(e.target.value)}\n              className=\"mb-4\"\n            />\n            <div className=\"flex items-center justify-between mb-4\">\n              <span>Show progress bar</span>\n              <Switch\n                checked={showProgressBar}\n                onCheckedChange={setShowProgressBar}\n              />\n            </div>\n            <Button onClick={handleUpdateFundSettings} className=\"w-full\">Update Fund Settings</Button>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport AuthPage from './pages/AuthPage';\n// import { HomePageWrapper } from './pages/HomePage';  // Импортируем HomePageWrapper вместо HomePage\nimport HomePage from './pages/HomePage';\n\nimport AdminPage from './pages/AdminPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<AuthPage />} />\n        <Route path=\"/home\" element={<HomePage />} />\n        <Route path=\"/admin\" element={<AdminPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}